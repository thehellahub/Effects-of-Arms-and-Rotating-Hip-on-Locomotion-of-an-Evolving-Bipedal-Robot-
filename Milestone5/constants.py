import math
import numpy as np

# BOOLEAN BODY ATTRIBUTES
ARMS 					= 1
ROTATING_HIP 			= 1

# SIMULATION OPTIONS
ITERATIONS      	 	= 1000
NUMBER_OF_GENERATIONS	= 5
POPULATION_SIZE 		= 10
PHC_RUNS				= 1
#NUM_PHC_WRAPPERS		= 5
SHOW_BEST				= True

# NEURAL NET OPTIONS
NUMBER_SENSOR_NEURONS	= 11
NUMBER_MOTOR_NEURONS 	= 13

# QUANTITATIVE BODY ATTRIBUTES
FOOT_HEIGHT     		= 0.33
SHIN_HEIGHT     		= 2.5
THIGH_HEIGHT    		= 2
TORSO_HEIGHT    		= 3
NECK_HEIGHT     		= 0.33
HEAD_HEIGHT     		= 0.65
SHOULDER_HEIGHT 		= 0.4
ARM_HEIGHT      		= 1.75

TORSO_WIDTH     		= 2
SHOULDER_WIDTH  		= 0.2
ARM_WIDTH       		= 0.5

FOOT_LENGTH     		= 1.25
TORSO_DEPTH     		= 1.2

# MOTOR STRENGTH
MOTOR_STRENGTH    		= 30 

# HIP MOTOR METRICS
AMPLITUDE_HIP     		= math.pi/4
FREQUENCY_HIP     		= 1
PHASEOFFSET_HIP   		= 5
TARGETANGLES_HIP  		= np.linspace(0, 2*math.pi, ITERATIONS)

# NECK MOTOR METRICS
AMPLITUDE_NECK    		= math.pi/4
FREQUENCY_NECK     		= 1
PHASEOFFSET_NECK   		= 5
TARGETANGLES_NECK  		= np.linspace(0, 2*math.pi, ITERATIONS)

# LEFT FOOT
AMPLITUDE_LFOOT     	= math.pi
FREQUENCY_LFOOT     	= 2
PHASEOFFSET_LFOOT   	= 5
TARGETANGLES_LFOOT  	= np.linspace(0, 2*math.pi, ITERATIONS)

# LEFT LEG MOTOR METRICS
AMPLITUDE_LOWERLLEG     = math.pi
FREQUENCY_LOWERLLEG     = 4
PHASEOFFSET_LOWERLLEG   = math.pi/4
TARGETANGLES_LOWERLLEG  = np.linspace(0, 2*math.pi, ITERATIONS)

AMPLITUDE_UPPERLLEG     = math.pi
FREQUENCY_UPPERLLEG     = 4
PHASEOFFSET_UPPERLLEG   = math.pi/4
TARGETANGLES_UPPERLLEG  = np.linspace(0, 2*math.pi, ITERATIONS)

# RIGHT FOOT
AMPLITUDE_RFOOT     	= math.pi
FREQUENCY_RFOOT     	= 4
PHASEOFFSET_RFOOT   	= math.pi/4
TARGETANGLES_RFOOT  	= np.linspace(0, 2*math.pi, ITERATIONS)

# RIGHT LEG MOTOR METRICS
AMPLITUDE_LOWERRLEG     = math.pi
FREQUENCY_LOWERRLEG     = 4
PHASEOFFSET_LOWERRLEG   = math.pi/4
TARGETANGLES_LOWERRLEG  = np.linspace(0, 2*math.pi, ITERATIONS)

AMPLITUDE_UPPERRLEG     = math.pi
FREQUENCY_UPPERRLEG     = 4
PHASEOFFSET_UPPERRLEG   = math.pi/4
TARGETANGLES_UPPERRLEG  = np.linspace(0, 2*math.pi, ITERATIONS)

# LEFT SHOULDER MOTOR METRICS
AMPLITUDE_LSHOULDER     = math.pi/4
FREQUENCY_LSHOULDER     = 1
PHASEOFFSET_LSHOULDER   = 5
TARGETANGLES_LSHOULDER  = np.linspace(0, 2*math.pi, ITERATIONS)

# LEFT ARM MOTOR METRICS
AMPLITUDE_LOWERLARM     = math.pi/4
FREQUENCY_LOWERLARM     = 2
PHASEOFFSET_LOWERLARM   = math.pi/4
TARGETANGLES_LOWERLARM  = np.linspace(0, 2*math.pi, ITERATIONS)

AMPLITUDE_UPPERLARM     = math.pi/4
FREQUENCY_UPPERLARM     = 2
PHASEOFFSET_UPPERLARM   = math.pi/4
TARGETANGLES_UPPERLARM  = np.linspace(0, 2*math.pi, ITERATIONS)

# RIGHT SHOULDER MOTOR METRICS
AMPLITUDE_RSHOULDER     = math.pi/4
FREQUENCY_RSHOULDER     = 1
PHASEOFFSET_RSHOULDER   = 5
TARGETANGLES_RSHOULDER  = np.linspace(0, 2*math.pi, ITERATIONS)

# RIGHT ARM MOTOR METRICS
AMPLITUDE_LOWERRARM     = math.pi/4
FREQUENCY_LOWERRARM     = 2
PHASEOFFSET_LOWERRARM   = math.pi/4
TARGETANGLES_LOWERRARM  = np.linspace(0, 2*math.pi, ITERATIONS)

AMPLITUDE_UPPERRARM     = math.pi/4
FREQUENCY_UPPERRARM     = 2
PHASEOFFSET_UPPERRARM   = math.pi/4
TARGETANGLES_UPPERRARM  = np.linspace(0, 2*math.pi, ITERATIONS)